version: "3.7"
services:
  # frontend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.prod.client
  #   depends_on:
  #     - backend
  #   ports:
  #     - "80:3000"
  #   stdin_open: true
  #   tty: true

  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod.server
    env_file:
      - .env
    ports:
      - "80:3001"
      - "443:3001"
    depends_on:
      redis: 
        condition: service_started
      postgres: 
        condition: service_started
      clickhouse:
        condition: service_started
      mongo: 
        condition: service_started
    links: 
        - mongo
    networks: 
      - laudspeaker_default

  redis:
    image: redis:alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - laudspeaker_default

  postgres:
    image: postgres:14.4-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - laudspeaker_default

  mongo:
    image: "mongo:latest"
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    restart: always
    healthcheck:
      test:  echo 'db.runCommand("ping").ok' | mongosh --eval "rs.initiate()" --quiet
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    command: "--bind_ip_all --replSet rs0"
    networks:
      - laudspeaker_default

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    restart: on-failure
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    networks:
      - laudspeaker_default

  metabase:
    image: my-metabase-with-clickhouse:v0.0.1
    container_name: metabase
    ports:
      - "3000:3000"
    restart: always
    env_file:
      - .env

networks:
  laudspeaker_default:
    driver: bridge
    name: laudspeaker_default

volumes:
  postgres-data:
  mongo-data:
  clickhouse-data: